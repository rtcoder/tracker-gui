{"version":3,"sources":["components/LinkBtn/LinkBtn.js","components/AddressForm/AddressForm.js","helpers/local-storage.js","pages/Home/Home.js","components/CanvasVideoPreview/CanvasVideoPreview.js","pages/PolygonSelect/PolygonSelect.js","pages/VideoPreview/VideoPreview.js","App.js","reportWebVitals.js","index.js"],"names":["LinkBtn","url","children","disabled","to","AddressForm","_address","address","addressUpdated","useState","protocol","setProtocol","login","setLogin","password","setPassWord","ip","setIp","port","setPort","path","setPath","setAddress","addressEmpty","setAddressEmpty","updateParts","fullAddress","isAddressEmpty","length","protocolLocation","split","_protocol","_location","replace","credentialsHostPort","_credentials","_hostPortPath","_login","_password","_hostPort","_path","_host","_port","useEffect","startsWith","ipPort","loginPassword","location","__protocol","addr","className","type","placeholder","value","onChange","e","target","getAddressFromLS","localStorage","getItem","Home","addressValid","setAddressValid","setItem","test","isValidHttpUrl","CanvasVideoPreview","selectingActive","canvasContentRef","useRef","canvasRef","videoRef","videoSrc","setVideoSrc","handleResize","current","getBoundingClientRect","width","height","window","addEventListener","removeEventListener","ref","src","PolygonSelect","setSelectingActive","selectingActivw","onClick","prev","VideoPreview","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.728c0c5d.chunk.js","sourcesContent":["import './LinkBtn.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction LinkBtn({url, children, disabled}) {\r\n  return (\r\n    <button disabled={disabled}>\r\n      <Link to={url}>\r\n        {children}\r\n      </Link>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default LinkBtn;","import './AddressForm.css';\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction AddressForm({address: _address, addressUpdated}) {\r\n  const [protocol, setProtocol] = useState('');\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassWord] = useState('');\r\n  const [ip, setIp] = useState('');\r\n  const [port, setPort] = useState('');\r\n  const [path, setPath] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [addressEmpty, setAddressEmpty] = useState(true);\r\n\r\n  const updateParts = fullAddress => {\r\n    const isAddressEmpty = !fullAddress.length;\r\n    if (isAddressEmpty) {\r\n      setProtocol('');\r\n      setLogin('');\r\n      setPassWord('');\r\n      setIp('');\r\n      setPort('');\r\n      setPath('');\r\n      return;\r\n    }\r\n    const protocolLocation = fullAddress.split('//');\r\n    let _protocol = '';\r\n    let _location = '';\r\n    if (protocolLocation.length === 2) {\r\n      _protocol = protocolLocation[0].replace(':', '');\r\n      _location = protocolLocation[1];\r\n    } else {\r\n      _location = protocolLocation[0];\r\n    }\r\n\r\n    const credentialsHostPort = _location.split('@');\r\n    let _credentials = '';\r\n    let _hostPortPath = '';\r\n    if (credentialsHostPort.length === 2) {\r\n      _credentials = credentialsHostPort[0];\r\n      _hostPortPath = credentialsHostPort[1];\r\n    } else {\r\n      _hostPortPath = credentialsHostPort[0];\r\n    }\r\n    const [_login = '', _password = ''] = _credentials.split(':');\r\n    const [_hostPort, ..._path] = _hostPortPath.split('/');\r\n    const [_host, _port = ''] = _hostPort.split(':');\r\n\r\n    setProtocol(_protocol);\r\n    setLogin(_login);\r\n    setPassWord(_password);\r\n    setIp(_host);\r\n    setPort(_port);\r\n    setPath(_path);\r\n\r\n    if (addressUpdated) {\r\n      if (isAddressEmpty) {\r\n        addressUpdated({address: '', protocol: '', login: '', password: '', ip: '', port: '', path: ''});\r\n      } else {\r\n        addressUpdated({\r\n          address: fullAddress,\r\n          protocol: _protocol,\r\n          login: _login,\r\n          password: _password,\r\n          ip: _host,\r\n          port: _port,\r\n          path: _path\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateParts(_address);\r\n  }, [_address]);\r\n\r\n  useEffect(() => {\r\n    if(!address.startsWith('[')) {\r\n      updateParts(address);\r\n    }\r\n  }, [address]);\r\n\r\n  useEffect(() => {\r\n    let isAddressEmpty;\r\n    const ipPort = port.length ? `${ip}:${port}` : ip;\r\n    const loginPassword = login.length || password.length ? `${login}:${password}` : '';\r\n    const location = loginPassword.length ? `${loginPassword}@${ipPort}` : ipPort;\r\n    const __protocol = protocol.length ? protocol : 'rstp';\r\n    let addr = path.length ? `${location}/${path}` : `${location}`;\r\n    addr = addr.length ? `${__protocol}://${addr}` : '[protokół]://[login]:[hasło]@[ip]:[port]/[ścieżka]';\r\n    isAddressEmpty = addr.startsWith('[');\r\n    setAddress(addr);\r\n\r\n    if (addressUpdated) {\r\n      if (isAddressEmpty) {\r\n        addressUpdated({address: '', protocol: '', login: '', password: '', ip: '', port: '', path: ''});\r\n      } else {\r\n        addressUpdated({address: addr, protocol, login, password, ip, port, path});\r\n      }\r\n    }\r\n    setAddressEmpty(isAddressEmpty);\r\n  }, [protocol, login, password, ip, port, path, addressEmpty]);\r\n\r\n  const handleAddressChange = e => setAddress(e.target.value);\r\n  const handleProtocolChange = e => setProtocol(e.target.value);\r\n  const handleLoginChange = e => setLogin(e.target.value);\r\n  const handlePasswordChange = e => setPassWord(e.target.value);\r\n  const handleIpChange = e => setIp(e.target.value);\r\n  const handlePortChange = e => setPort(e.target.value);\r\n  const handlePathChange = e => setPath(e.target.value);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"inputs\">\r\n        <input type=\"text\" placeholder=\"adres\" value={address.startsWith('[') ? '' : address}\r\n               onChange={handleAddressChange}/>\r\n        <input type=\"text\" placeholder=\"protokół\" value={protocol} onChange={handleProtocolChange}/>\r\n        <input type=\"text\" placeholder=\"login\" value={login} onChange={handleLoginChange}/>\r\n        <input type=\"text\" placeholder=\"hasło\" value={password} onChange={handlePasswordChange}/>\r\n        <input type=\"text\" placeholder=\"ip\" value={ip} onChange={handleIpChange}/>\r\n        <input type=\"text\" placeholder=\"port\" value={port} onChange={handlePortChange}/>\r\n        <input type=\"text\" placeholder=\"ścieżka\" value={path} onChange={handlePathChange}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddressForm;","export const getAddressFromLS = () => {\r\n  return localStorage.getItem('tracker-cam-address') || '';\r\n};\r\n\r\nexport const setAddressInLS = value => {\r\n  localStorage.setItem('tracker-cam-address', value);\r\n};","import './Home.css';\r\nimport LinkBtn from \"../../components/LinkBtn/LinkBtn\";\r\nimport AddressForm from \"../../components/AddressForm/AddressForm\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {getAddressFromLS, setAddressInLS} from \"../../helpers/local-storage\";\r\n\r\nfunction Home() {\r\n  const [address, setAddress] = useState('');\r\n  const [addressValid, setAddressValid] = useState('');\r\n\r\n  useEffect(() => {\r\n    setAddress(getAddressFromLS());\r\n  }, []);\r\n\r\n  const handleSelectChange = e => setAddress(e.target.value);\r\n\r\n  const isValidHttpUrl = ({protocol, login, password, ip, port}) => {\r\n    setAddressValid(!!(protocol.length\r\n      && ip.length\r\n      && (\r\n        (login.length && password.length)\r\n        || (!login.length && !password.length)\r\n      )\r\n      && (/^\\d+$/.test(port) || !port.length)\r\n    ));\r\n  };\r\n\r\n  const updateAddress = ({address, protocol, login, password, ip, port}) => {\r\n    isValidHttpUrl({protocol, login, password, ip, port});\r\n    setAddress(address);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (addressValid) {\r\n      setAddressInLS(address);\r\n    }\r\n  }, [address, addressValid]);\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>Tracker GUI</h1>\r\n        <p>Jakiś tam tekst co tam apka może robić albo krótka instrukcja</p>\r\n      </header>\r\n\r\n      <div className=\"content home\">\r\n        <div className=\"links\">\r\n          <LinkBtn url=\"/polygon\" disabled={!addressValid}>Zaznaczenie sceny</LinkBtn>\r\n          <LinkBtn url=\"/video\" disabled={!addressValid}>Podgląd śledzenia</LinkBtn>\r\n        </div>\r\n        {\r\n          !address.length || !addressValid\r\n            ? <p>Aby przejść dalej musisz podać poprawny adres IP kamery</p>\r\n            : ''\r\n        }\r\n\r\n        <div className=\"address\">\r\n          <div>\r\n            <code className={addressValid ? '' : 'error'}>{address}</code>\r\n            <AddressForm address={address} addressUpdated={updateAddress}/>\r\n          </div>\r\n          <div className=\"addresses-from-local-network\">\r\n            <span>lub wybierz z listy</span>\r\n            <select onChange={handleSelectChange}>\r\n              <option value=\"\">Wybierz</option>\r\n              <option value=\"http://facebook.com\">http://facebook.com</option>\r\n              <option value=\"ftp://admin:pass@123.456.789:1212\">ftp://admin:pass@123.456.789:1212</option>\r\n              <option value=\"432.64.2:4443\">432.64.2:4443</option>\r\n              <option value=\"ssh://123.456.789:1212\">ssh://123.456.789:1212</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import './CanvasVideoPreview.css';\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport {getAddressFromLS} from \"../../helpers/local-storage\";\r\n\r\nfunction CanvasVideoPreview({selectingActive}) {\r\n\r\n  const canvasContentRef = useRef();\r\n  const canvasRef = useRef();\r\n  const videoRef = useRef();\r\n\r\n  const [videoSrc, setVideoSrc] = useState('');\r\n\r\n  useEffect(() => {\r\n\r\n    setVideoSrc(getAddressFromLS());\r\n\r\n    function handleResize() {\r\n      const {width, height} = canvasContentRef.current?.getBoundingClientRect();\r\n      if (width && height) {\r\n        videoRef.current.width = width;\r\n        videoRef.current.height = height;\r\n        canvasRef.current.width = width;\r\n        canvasRef.current.height = height;\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"canvas\">\r\n      <div className=\"canvas-container\" ref={canvasContentRef}>\r\n        <video ref={videoRef} src={videoSrc}>\r\n          fallback\r\n        </video>\r\n        <canvas ref={canvasRef}>\r\n\r\n        </canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanvasVideoPreview;","import './PolygonSelect.css';\r\nimport LinkBtn from \"../../components/LinkBtn/LinkBtn\";\r\nimport CanvasVideoPreview from \"../../components/CanvasVideoPreview/CanvasVideoPreview\";\r\nimport {useState} from \"react\";\r\n\r\nfunction PolygonSelect() {\r\n  const [selectingActive, setSelectingActive] = useState(false);\r\n  const [points, setPoints] = useState([]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <LinkBtn url=\"/\">Wstecz</LinkBtn>\r\n      </header>\r\n      <div className=\"content\">\r\n\r\n        <CanvasVideoPreview selectingActivw={selectingActive}/>\r\n\r\n        <div className=\"three-buttons\">\r\n\r\n          <div className=\"column\">\r\n            <button onClick={() => setSelectingActive(prev => !prev)}>\r\n              {selectingActive ? 'Wyłącz zaznaczanie' : 'Aktywuj zaznaczanie'}\r\n            </button>\r\n          </div>\r\n          <div className=\"column\">\r\n            <button>\r\n              Zapisz\r\n            </button>\r\n          </div>\r\n          <div className=\"column\">\r\n            <button>\r\n              Wyślij dane do API\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PolygonSelect;\r\n","import LinkBtn from \"../../components/LinkBtn/LinkBtn\";\r\nimport CanvasVideoPreview from \"../../components/CanvasVideoPreview/CanvasVideoPreview\";\r\n\r\nfunction VideoPreview() {\r\n  return (\r\n    <>\r\n      <header>\r\n        <LinkBtn url=\"/\">Wstecz</LinkBtn>\r\n      </header>\r\n      <div className=\"content\">\r\n        <CanvasVideoPreview selectingActivw={false}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VideoPreview;\r\n","import './App.css';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport PolygonSelect from \"./pages/PolygonSelect/PolygonSelect\";\r\nimport VideoPreview from \"./pages/VideoPreview/VideoPreview\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Route path=\"/\" exact component={Home}/>\r\n        <Route path=\"/polygon\" component={PolygonSelect}/>\r\n        <Route path=\"/video\" component={VideoPreview}/>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}